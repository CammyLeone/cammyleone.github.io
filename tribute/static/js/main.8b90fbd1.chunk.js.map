{"version":3,"sources":["../external \"Buttplug\"","img/texture1.jpg","platforms.js","New.js","../../src/ConnectAToy.js","../../src/useButtPlug.js","distance.js","Button.js","Tribute.js","../../src/useVibration.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Buttplug","ALL_PLATFORMS","PLATFORM","URLS","name","IDENTIFIERS","LABELS","urlFor","platform","labelFor","New","useForm","register","handleSubmit","watch","useState","url","setUrl","selectedPlatform","selectedPlatformIsVenmo","onSubmit","user","process","htmlFor","id","ref","map","p","idx","value","key","type","disabled","href","role","aria-label","DefaultClickToStart","initiateConnection","onClick","DefaultClickToStop","stopConnecting","DefaultConnected","ConnectAToy","clickToStart","clickToStop","connected","onNewDevice","ready","client","useRef","useEffect","a","connector","console","device","setDevice","setIsConnected","start","useButtPlug","isReady","setConnected","setReady","pythagorean","x","y","Math","sqrt","pow","centerOfNode","node","rect","getBoundingClientRect","left","right","top","bottom","scale","d3","exponent","clamp","domain","range","ring","keyframes","animation","css","styled","attrs","props","style","animationDuration","intensity","glow","defaultBackground","texture1","specialBackgrounds","SensateArts","FullSizedMain","main","Tribute","tributeRef","setIntensity","onMouseMove","useCallback","throttle","clientX","clientY","distance","center","distanceToNode","current","maxDistance","max","window","innerWidth","innerHeight","maxDistanceFromCenterOfNode","level","startVibrate","stopVibrate","useVibration","Button","d","as","TributeParams","useParams","App","path","component","from","to","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8b90fbd1.chunk.js","sourcesContent":["module.exports = Buttplug;","module.exports = __webpack_public_path__ + \"static/media/texture1.de8a4e5d.jpg\";","const PAYPAL = \"paypal\";\nconst CASHAPP = \"cashapp\";\nconst VENMO = \"venmo\";\n\nexport const ALL_PLATFORMS = [PAYPAL, CASHAPP, VENMO];\nexport const PLATFORM = { PAYPAL, CASHAPP, VENMO };\n\nconst URLS = {\n  [PAYPAL]: (name) => `https://paypal.me/${name}`,\n  [CASHAPP]: (name) => `https://cash.app/${name}`,\n};\n\nconst IDENTIFIERS = {\n  [PAYPAL]: \"user name\",\n  [CASHAPP]: \"$cashtag\",\n};\n\nconst LABELS = {\n  [PAYPAL]: \"PayPal\",\n  [CASHAPP]: \"Cash App\",\n  [VENMO]: \"Venmo\",\n};\n\nexport const urlFor = (platform, name) => URLS[platform](name);\nexport const identifierFor = (platform) => IDENTIFIERS[platform];\nexport const labelFor = (platform) => LABELS[platform];\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { ALL_PLATFORMS, PLATFORM, identifierFor, labelFor } from \"./platforms\";\nconst URL_BASE = process.env.REACT_APP_LINK_BASE;\n\nexport default function New() {\n  const { register, handleSubmit, watch } = useForm();\n  const [url, setUrl] = useState(null);\n  const selectedPlatform = watch(\"platform\");\n  const selectedPlatformIsVenmo = selectedPlatform === PLATFORM.VENMO;\n\n  const generateLink = ({ platform, user }) => {\n    setUrl(`${URL_BASE}/${platform}/${user}`);\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit(generateLink)}>\n        <div>\n          <label htmlFor=\"platform\">How you want your money:</label>\n          <select name=\"platform\" id=\"platform\" ref={register}>\n            {ALL_PLATFORMS.map((p, idx) => (\n              <option value={p} key={idx}>\n                {labelFor(p)}\n              </option>\n            ))}\n          </select>\n        </div>\n        {selectedPlatform && (\n          <div>\n            <div>\n              <label htmlFor=\"user\">\n                Your {labelFor(selectedPlatform)}{\" \"}\n                {identifierFor(selectedPlatform)}:\n              </label>\n              <input\n                name=\"user\"\n                id=\"user\"\n                type=\"text\"\n                ref={register}\n                disabled={selectedPlatformIsVenmo}\n              />\n            </div>\n            {selectedPlatformIsVenmo &&\n              \"Sorry, Venmo isn't doing web payments any more :(\"}\n            <div>\n              <input type=\"submit\" value=\"Generate a URL\" />\n            </div>\n          </div>\n        )}\n      </form>\n      {url && (\n        <section>\n          <a href={url}>{url}</a>\n          <br />\n          <span role=\"img\" aria-label=\"Link above\">\n            ☝️\n          </span>{\" \"}\n          send this link to your submissive\n        </section>\n      )}\n    </main>\n  );\n}\n","import React, { useState } from \"react\";\nimport useButtPlug from \"./useButtPlug\";\n\nconst DefaultClickToStart = ({ initiateConnection }) => (\n  <button onClick={initiateConnection}>Connect a Toy</button>\n);\nconst DefaultClickToStop = ({ stopConnecting }) => (\n  <button onClick={stopConnecting}>Stop Connecting</button>\n);\nconst DefaultConnected = () => <span>Connected!</span>;\n\nexport default function ConnectAToy({\n  clickToStart = DefaultClickToStart,\n  clickToStop = DefaultClickToStop,\n  connected = DefaultConnected,\n  onNewDevice,\n}) {\n  const [isReady, setReady] = useState(false);\n  const [isConnected, setConnected] = useState(false);\n\n  useButtPlug(isReady, (device) => {\n    setConnected(true);\n    onNewDevice(device);\n  });\n\n  if (isConnected) return connected();\n  if (!isReady)\n    return clickToStart({ initiateConnection: () => setReady(true) });\n  if (isReady) return clickToStop({ stopConnecting: () => setReady(false) });\n  return null;\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport { ButtplugClient, ButtplugEmbeddedClientConnector } from \"buttplug\";\n\nexport default function useButtPlug(ready, onNewDevice) {\n  const client = useRef(null);\n  const [device, setDevice] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    if (client.current && !ready) {\n      client.current = null;\n    }\n    if (client.current || !ready) return;\n\n    client.current = new ButtplugClient(\"Cammy\");\n    client.current.addListener(\"deviceadded\", (device) => {\n      setDevice(device);\n      setIsConnected(true);\n      onNewDevice(device);\n    });\n\n    async function start() {\n      try {\n        const connector = new ButtplugEmbeddedClientConnector();\n        await client.current.Connect(connector);\n      } catch (e) {\n        console.log(e);\n        return;\n      }\n      await client.current.StartScanning();\n    }\n    start();\n  }, [ready]);\n\n  return { client, device, isConnected };\n}\n","const pythagorean = (x, y) => Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\nconst centerOfNode = (node) => {\n  const rect = node.getBoundingClientRect();\n  return {\n    x: rect.left + (rect.right - rect.left) / 2,\n    y: rect.top + (rect.bottom - rect.top) / 2,\n  };\n};\n\nexport const distanceToNode = (node, clientX, clientY) => {\n  const center = centerOfNode(node);\n  return pythagorean(clientX - center.x, clientY - center.y);\n};\n\nexport const maxDistanceFromCenterOfNode = (node) => {\n  const center = centerOfNode(node);\n  return Math.max(\n    pythagorean(center.x, center.y),\n    pythagorean(window.innerWidth - center.x, center.y),\n    pythagorean(center.x, window.innerHeight - center.y),\n    pythagorean(window.innerWidth - center.x, window.innerHeight - center.y)\n  );\n};\n","import styled, { keyframes, css } from \"styled-components\";\nimport * as d3 from \"d3-scale\";\n\nconst scale = d3\n  .scalePow()\n  .exponent(0.8)\n  .clamp(true)\n  .domain([1, 0])\n  .range([0.1, 2]);\n\nconst animationIntensity = (intensity) => {\n  return scale(intensity);\n};\n\nconst ring = keyframes`\n  0% {\n    box-shadow: 0 0 30px #FFF;\n  }\n  100% {\n    box-shadow: 0 0 0px #FFF;\n  }\n`;\n\nconst animation = css`\n  animation: ${ring} infinite;\n`;\n\nexport default styled.a.attrs((props) => ({\n  style: {\n    animationDuration: `${animationIntensity(props.intensity)}s`,\n  },\n}))`\n  cursor: pointer;\n  display: block;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  line-height: 1.4em;\n  padding: 10px 50px;\n\n  color: #fff;\n  background-color: rgba(255, 255, 255, 0.1);\n  border: solid 2px;\n  border-color: rgba(255, 255, 255, 0.3);\n\n  transition: background-color 0.4s ease 0s;\n  transition: border-color 0.4s ease 0s;\n\n  ${(props) => props.glow && animation};\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.3);\n    border-color: #fff;\n  }\n`;\n","import React, { useRef, useState, useCallback } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport throttle from \"lodash.throttle\";\nimport * as d3 from \"d3-scale\";\n\nimport { ConnectAToy, useVibration } from \"react-buttplug\";\nimport { distanceToNode, maxDistanceFromCenterOfNode } from \"./distance\";\nimport { urlFor } from \"./platforms\";\nimport Button from \"./Button\";\nimport texture1 from \"./img/texture1.jpg\";\n\nconst DEBUG = process.env.NODE_ENV !== \"production\";\n\nconst defaultBackground = css`\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n    url(${texture1});\n`;\n\nconst specialBackgrounds = {\n  SensateArts: css`\n    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n      url(https://static.wixstatic.com/media/5f397a_0fd6ca9520fa4e148efa5c7b1eacfbea~mv2.jpg/v1/fill/w_980,h_920,al_c,q_85,usm_0.66_1.00_0.01/5f397a_0fd6ca9520fa4e148efa5c7b1eacfbea~mv2.webp);\n  `,\n};\nconst FullSizedMain = styled.main`\n  ${(props) => specialBackgrounds[props.user] || defaultBackground};\n  background-size: cover;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nfunction Tribute({ platform, user }) {\n  const [device, setDevice] = useState(null);\n  const tributeRef = useRef(null);\n  const [intensity, setIntensity] = useState(0);\n\n  function updateFromMouse({ clientX, clientY }) {\n    if (!device) return;\n\n    const distance = distanceToNode(tributeRef.current, clientX, clientY);\n    const maxDistance = maxDistanceFromCenterOfNode(tributeRef.current);\n    const scale = d3\n      .scalePow()\n      .exponent(0.8)\n      .clamp(true)\n      .domain([maxDistance, 0])\n      .range([0, 1]);\n    setIntensity(scale(distance));\n    DEBUG && console.log(distance, scale(distance));\n  }\n  const onMouseMove = useCallback(throttle(updateFromMouse, 600));\n\n  useVibration(device, intensity);\n\n  return (\n    <FullSizedMain\n      user={user}\n      onMouseMove={({ clientX, clientY }) => onMouseMove({ clientX, clientY })}\n    >\n      <ConnectAToy\n        clickToStart={({ initiateConnection }) => (\n          <Button glow intensity={0.5} onClick={initiateConnection}>\n            Connect a Toy\n          </Button>\n        )}\n        clickToStop={({ stopConnecting }) => (\n          <Button onClick={stopConnecting}>Stop Connecting</Button>\n        )}\n        connected={() => null}\n        onNewDevice={(d) => setDevice(d)}\n      />\n      {device && (\n        <Button\n          as=\"a\"\n          href={urlFor(platform, user)}\n          ref={tributeRef}\n          glow\n          intensity={intensity}\n        >\n          Pay Me\n        </Button>\n      )}\n    </FullSizedMain>\n  );\n}\n\nexport default Tribute;\n","import { useEffect } from \"react\";\n\nexport default function useVibrate(device, level) {\n  useEffect(() => {\n    if (!device) return;\n\n    async function startVibrate() {\n      console.log(\"startVibrate()\");\n      device.SendVibrateCmd(level);\n      console.log(\"startVibrate() over\");\n    }\n\n    async function stopVibrate() {\n      console.log(\"stopVibrate()\");\n      await device.SendStopDeviceCmd();\n      console.log(\"stopVibrate() over\");\n    }\n\n    console.log(`vibrateEffect: ${level}`);\n    if (level > 0) {\n      startVibrate();\n    } else {\n      stopVibrate();\n    }\n  }, [device, level]);\n\n  return null;\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect, useParams } from \"react-router-dom\";\n\nimport New from \"./New\";\nimport Tribute from \"./Tribute\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/new\" component={New} />\n      <Route path=\"/:platform/:user\" component={TributeParams} />\n      <Redirect from=\"/\" to=\"/new\" />\n    </Switch>\n  );\n}\n\nfunction TributeParams() {\n  const { platform, user } = useParams();\n  return <Tribute platform={platform} user={user} />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}